@model WebBanHang.Context.Product

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<h2>Sửa sản phẩm</h2>

@using (Html.BeginForm("Edit", "Product", FormMethod.Post, new { enctype = "multipart/form-data" }))

{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>@Model.Name</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.id)

    <div class="form-group">
        @Html.LabelFor(model => model.Name, "Tên sản phẩm", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Avatar, "Ảnh đại diện", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="image-upload-container">
                <input type="file" name="ImageUpload" id="imageUpload" />
                @if (!string.IsNullOrWhiteSpace(Model.Avatar))
                {
                    <img id="oldImage" src="@Url.Content("~/Content/images/upload/" + Model.Avatar)" alt="Ảnh đại diện" />
                }

                <img id="previewImage" src="#" alt="Ảnh đại diện" style="display: none;" />
                @Html.HiddenFor(model => model.Avatar)
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Avatar1, "Ảnh 1", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="image-upload-container">
                <input type="file" name="ImageUpload1" id="imageUpload1" />
                @if (!string.IsNullOrWhiteSpace(Model.Avatar1))
                {
                    <img id="oldImage1" src="@Url.Content("~/Content/images/upload/" + Model.Avatar1)" alt="Ảnh 1" />
                }

                <img id="previewImage1" src="#" alt="Ảnh 2" style="display: none;" />
                @Html.HiddenFor(model => model.Avatar1)
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Avatar2, "Ảnh 2", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="image-upload-container">
                <input type="file" name="ImageUpload2" id="imageUpload2" />
                @if (!string.IsNullOrWhiteSpace(Model.Avatar2))
                {
                    <img id="oldImage2" src="@Url.Content("~/Content/images/upload/" + Model.Avatar2)" alt="Ảnh 2" />
                }

                <img id="previewImage2" src="#" alt="Ảnh 2" style="display: none;" />
                @Html.HiddenFor(model => model.Avatar2)
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Avatar3, "Ảnh 3", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="image-upload-container">
                <input type="file" name="ImageUpload3" id="imageUpload3" />
                @if (!string.IsNullOrWhiteSpace(Model.Avatar3))
                {
                    <img id="oldImage3" src="@Url.Content("~/Content/images/upload/" + Model.Avatar3)" alt="Ảnh 3" />
                }

                <img id="previewImage3" src="#" alt="Ảnh 3" style="display: none;" />
                @Html.HiddenFor(model => model.Avatar3)
            </div>
        </div>
    </div>




    <div class="form-group">
        @Html.LabelFor(model => model.CategoryId, "Danh mục", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.CategoryId, new SelectList(ViewBag.Categories, "Id", "Name"), "Chọn danh mục", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.BrandId, "Thương hiệu", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.BrandId, new SelectList(ViewBag.Brands, "Id", "Name"), "Chọn thương hiệu", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.BrandId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.quantity, "Số lượng kho", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.quantity, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.quantity, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ShortDes, "Mô tả sơ lược", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ShortDes, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ShortDes, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FullDescription, "Mô tả chi tiết", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FullDescription, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FullDescription, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Price, "Giá", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PriceDiscount, "Khuyến mãi", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PriceDiscount, new { htmlAttributes = new { @class = "form-control", id = "priceDiscountInput", onchange = "setTypeId()" } })
            @Html.ValidationMessageFor(model => model.PriceDiscount, "", new { @class = "text-danger" })
        </div>
    </div>

    <input type="hidden" name="typeId" id="typeIdInput" value="2" />

    @* Kiểm tra nếu có giá trị trong input khuyến mãi thì set typeId *@
    <script>
    var initialPriceDiscount = '@Model.PriceDiscount';
    var priceDiscountInput = document.getElementById("priceDiscountInput");
    var typeIdInput = document.getElementById("typeIdInput");

    // Set initial typeId value
    if (initialPriceDiscount == "" || isNaN(initialPriceDiscount)) {
        typeIdInput.value = "2";
    } else {
        typeIdInput.value = "1";
    }

    // Check if typeId should be updated
    function setTypeId() {
        if (priceDiscountInput.value != initialPriceDiscount && priceDiscountInput.value != "" && !isNaN(priceDiscountInput.value)) {
            typeIdInput.value = "1";
        } else {
            typeIdInput.value = "2";
        }
    }
    </script>




    <div class="form-group">
        @Html.LabelFor(model => model.Slug, "Tên sản phẩm không dấu", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Slug, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Slug, "", new { @class = "text-danger" })
        </div>
    </div>



    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Lưu" class="btn btn-default" />
        </div>
    </div>
</div>
}

<style>
    .image-upload-container {
        display: flex;
        align-items: center;
    }

        .image-upload-container img {
            max-width: 200px;
            margin-left: 10px;
            border-radius: 5px;
        }
</style>

<script>
    //  ảnh
    var input = document.getElementById("imageUpload");
    var preview = document.getElementById("previewImage");
    var oldImage = document.getElementById("oldImage");

    input.addEventListener("change", function () {
        var file = this.files[0];

        if (file) {
            var reader = new FileReader();

            reader.addEventListener("load", function () {
                if (oldImage) {
                    oldImage.style.display = "none"; // ẩn ảnh cũ
                }
                preview.setAttribute("src", this.result);
                preview.style.display = "block"; // hiển thị ảnh mới
            });

            reader.readAsDataURL(file);
        }
    });

    // ảnh 1
    var input1 = document.getElementById("imageUpload1");
    var preview1 = document.getElementById("previewImage1");
    var oldImage1 = document.getElementById("oldImage1");

    input1.addEventListener("change", function () {
        var file = this.files[0];

        if (file) {
            var reader = new FileReader();

            reader.addEventListener("load", function () {
                if (oldImage1) {
                    oldImage1.style.display = "none"; // ẩn ảnh cũ
                }
                preview1.setAttribute("src", this.result);
                preview1.style.display = "block"; // hiển thị ảnh mới
            });

            reader.readAsDataURL(file);
        }
    });

    // ảnh 2
    var input2 = document.getElementById("imageUpload2");
    var preview2 = document.getElementById("previewImage2");
    var oldImage2 = document.getElementById("oldImage2");

    input2.addEventListener("change", function () {
        var file = this.files[0];

        if (file) {
            var reader = new FileReader();

            reader.addEventListener("load", function () {
                if (oldImage2) {
                    oldImage2.style.display = "none"; // ẩn ảnh cũ
                }
                preview2.setAttribute("src", this.result);
                preview2.style.display = "block"; // hiển thị ảnh mới
            });

            reader.readAsDataURL(file);
        }
    });

    // ảnh 3
    var input3 = document.getElementById("imageUpload3");
    var preview3 = document.getElementById("previewImage3");
    var oldImage3 = document.getElementById("oldImage3");

    input3.addEventListener("change", function () {
        var file = this.files[0];

        if (file) {
            var reader = new FileReader();

            reader.addEventListener("load", function () {
                if (oldImage3) {
                    oldImage3.style.display = "none"; // ẩn ảnh cũ
                }
                preview3.setAttribute("src", this.result);
                preview3.style.display = "block"; // hiển thị ảnh mới
            });

            reader.readAsDataURL(file);
        }
    });
</script>


@* end Custom and call img *@