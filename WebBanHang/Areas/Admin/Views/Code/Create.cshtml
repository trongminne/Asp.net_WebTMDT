@model WebBanHang.Context.Code

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm("Create", "Code", FormMethod.Post, new { enctype = "multipart/form-data", onsubmit = "setTypeId()" }))
{
    @Html.AntiForgeryToken()
    <h2 style="padding-top: 10px">Thêm phiếu giảm giá</h2>

    <div class="form-horizontal  " style="padding-bottom: 20px">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Name, "Tên thẻ giảm giá", htmlAttributes: new { @class = "control-label col-md-2" })

            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Code1, "Mã code", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Code1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Code1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, "Số tiền trừ", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Thêm code" class="btn btn-info" />
            </div>
        </div>
    </div>
}

@* Custom and call img *@
<style>
    .image-upload-container {
        display: flex;
        align-items: center;
    }

        .image-upload-container img {
            max-width: 200px;
            max-height: 150px;
            margin-left: 10px;
            border-radius: 5px;
        }

    #previewImage {
        display: none;
        max-width: 200px;
    }

    #previewImage1 {
        display: none;
        max-width: 200px;
    }

    #previewImage2 {
        display: none;
        max-width: 200px;
    }

    #previewImage3 {
        display: none;
        max-width: 200px;
    }
</style>

@* Hiển thị ảnh *@

<script>
    var input = document.getElementById("imageUpload");
    var preview = document.getElementById("previewImage");

    input.addEventListener("change", function () {
        var file = this.files[0];

        if (file) {
            var reader = new FileReader();

            reader.addEventListener("load", function () {
                preview.setAttribute("src", this.result);
                preview.style.display = "block";
            });

            reader.readAsDataURL(file);
        }
    });


</script>



@* end Custom and call img *@
