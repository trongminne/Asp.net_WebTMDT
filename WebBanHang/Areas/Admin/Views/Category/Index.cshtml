@model IEnumerable<WebBanHang.Context.Category>

@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<p style="padding-top: 20px">
    @Html.ActionLink("Thêm mới", "Create", null, new { @class = "btn btn-info" })
    <button class="btn btn-danger" id="btnDeleteSelected" onclick="confirmDeleteSelected()">Xoá các mục đã chọn</button>
</p>

<table class="table table-bordered" id="data_product" cellspacing="0">
    <thead>
        <tr>
            <th>
                <div class="form-check form-check-muted m-0 cntr">
                    <input type="checkbox" class="customcheckbox hidden-xs-up" id="cbx" onchange="checkAll(this)" class="form-check-input hidden-xs-up">
                </div>
            </th>

            <th>
                STT
            </th>

            <th>
                Tên danh mục
            </th>
            <th>
                Ảnh
            </th>


            <th>Chức năng</th>
        </tr>

    </thead>
    <tbody>
        @{ var i = 0; }
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    <input type="checkbox" id="checkkhoa" value="@item.id" style="margin-left: 20px">
                </td>
                <td>@(i + 1)</td>
                <td>
                    <a href="@Url.Action("ProductCategory", "Category", new { area = "", id = item.id })">@Html.DisplayFor(modelItem => item.Name)</a>

                </td>

                <td>
                    <img src="@Url.Content("~/Content/images/upload/" + item.Avatar)" width="50px" style="border-radius:5px" />
                </td>

                <td>
                    @Html.ActionLink("Sửa", "Edit", new { id = item.id }, new { @class = "btn btn-warning" })
                    |
                    <button class="btn btn-danger" onclick="confirmDelete(@item.id)">Xoá</button>
                </td>
            </tr>
            i++;
        }
    </tbody>

</table>
<script>

    var checkkhoa = document.querySelectorAll("#checkkhoa");

    function checkAll(myCheckbox) {
        if (myCheckbox.checked == true) {
            checkkhoa.forEach(function (checkbox) {
                checkbox.checked = true;
            });
        } else {
            checkkhoa.forEach(function (checkbox) {
                checkbox.checked = false;
            });
        }
    }
</script>

@*// Delete*@

<script>
function confirmDelete(id) {
    swal({
        title: "Bạn có chắc muốn xóa danh mục này?",
        text: "Sau khi xóa, danh mục sẽ không thể phục hồi!",
        icon: "warning",
        buttons: true,
        dangerMode: true,
    })
    .then((willDelete) => {
        if (willDelete) {
            $.ajax({
                url: "@Url.Action("Delete", "Category")/" + id,
                type: "POST",
                success: function (result) {
                    swal({
                        title: "Thành công!",
                        text: "Danh mục đã được xoá",
                        icon: "success",
                        timer: 3000,
                        buttons: false,
                    }).then(() => {
                        location.reload();
                    });
                },
                error: function () {
                    swal({
                        title: "Lỗi khi xoá danh mục!",
                        text: "Vui lòng thử lại sau.",
                        icon: "error",
                    });
                }
            });
        }
    });
}
</script>

@*// Xoá nhiều*@
<script>
    var checkkhoa = document.querySelectorAll("#checkkhoa");
    var selectedIds = [];

    function checkAll(myCheckbox) {
        if (myCheckbox.checked == true) {
            checkkhoa.forEach(function (checkbox) {
                checkbox.checked = true;
                if (selectedIds.indexOf(checkbox.value) < 0) {
                    selectedIds.push(checkbox.value);
                }
            });
        } else {
            checkkhoa.forEach(function (checkbox) {
                checkbox.checked = false;
                var index = selectedIds.indexOf(checkbox.value);
                if (index >= 0) {
                    selectedIds.splice(index, 1);
                }
            });
        }
    }

    function confirmDeleteSelected() {
        if (selectedIds.length > 0) {
            swal({
                title: "Bạn có chắc muốn xóa các danh mục đã chọn?",
                text: "Sau khi xóa, các danh mục sẽ không thể phục hồi!",
                icon: "warning",
                buttons: true,
                dangerMode: true,
            })
            .then((willDelete) => {
                if (willDelete) {
                    $.ajax({
                        url: "@Url.Action("DeleteSelected", "Category")",
                        type: "POST",
                        data: { ids: selectedIds },
                        success: function (result) {
                            swal({
                                title: "Thành công!",
                                text: "Các danh mục đã được xoá",
                                icon: "success",
                                timer: 3000,
                                buttons: false,
                            }).then(() => {
                                location.reload();
                            });
                        },
                        error: function () {
                            swal({
                                title: "Lỗi khi xoá danh mục!",
                                text: "Vui lòng thử lại sau.",
                                icon: "error",
                            });
                        }
                    });
                }
            });
        } else {
            swal("Vui lòng chọn ít nhất một danh mục để xoá!");
        }
    }

    checkkhoa.forEach(function (checkbox) {
        checkbox.addEventListener("change", function () {
            var index = selectedIds.indexOf(this.value);
            if (this.checked && index < 0) {
                selectedIds.push(this.value);
            } else if (!this.checked && index >= 0) {
                selectedIds.splice(index, 1);
                selectedIds.splice(index, 1);
            }
        });
    });
</script>
